//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun 13 2020 22:17:22).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <SketchRendering/MSRenderingContext.h>

@class MSCGContextPool, NSGraphicsContext, NSMutableArray;

@interface MSRenderingContextCG : MSRenderingContext
{
    BOOL _contextIsVectorBacked;
    struct CGContext *_contextRef;
    MSCGContextPool *_contextPool;
    unsigned long long _disableClippingFillsCounter;
    NSGraphicsContext *_graphicsContext;
    struct CGContext *_savedContextRef;
    NSMutableArray *_bitmapTransparencyLayerSavedStates;
    unsigned long long _disableDrawingFillsCounter;
}

@property(nonatomic) unsigned long long disableDrawingFillsCounter; // @synthesize disableDrawingFillsCounter=_disableDrawingFillsCounter;
@property(retain, nonatomic) NSMutableArray *bitmapTransparencyLayerSavedStates; // @synthesize bitmapTransparencyLayerSavedStates=_bitmapTransparencyLayerSavedStates;
@property(nonatomic) struct CGContext *savedContextRef; // @synthesize savedContextRef=_savedContextRef;
@property(retain, nonatomic) NSGraphicsContext *graphicsContext; // @synthesize graphicsContext=_graphicsContext;
@property(nonatomic) unsigned long long disableClippingFillsCounter; // @synthesize disableClippingFillsCounter=_disableClippingFillsCounter;
@property(retain, nonatomic) MSCGContextPool *contextPool; // @synthesize contextPool=_contextPool;
@property(readonly, nonatomic) struct CGContext *contextRef; // @synthesize contextRef=_contextRef;
@property(readonly, nonatomic) BOOL contextIsVectorBacked; // @synthesize contextIsVectorBacked=_contextIsVectorBacked;
- (void).cxx_destruct;
- (BOOL)shouldDrawFills;
- (void)ifCondition:(BOOL)arg1 skipDrawingFillsInBlock:(CDUnknownBlockType)arg2;
- (BOOL)shouldClipFills;
- (void)doNotClipFillsInBlock:(CDUnknownBlockType)arg1;
- (void)applyStrokeColor:(id)arg1;
- (void)applyFillColor:(id)arg1;
- (void)clipToRect:(struct CGRect)arg1;
- (void)applyShadow:(id)arg1 withXOffset:(double)arg2 respectFlipped:(BOOL)arg3;
- (void)applyShadow:(id)arg1 withXOffset:(double)arg2;
- (void)applyShadow:(id)arg1 respectFlipped:(BOOL)arg2;
- (void)applyShadow:(id)arg1;
- (BOOL)shouldSkipDrawingShadow:(id)arg1;
- (void)renderRect:(struct CGRect)arg1 withStyle:(id)arg2;
- (void)renderLayer:(id)arg1 ignoreCacheAndDrawingArea:(BOOL)arg2;
- (void)tearDown;
- (BOOL)shouldDisableSubpixelQuantization;
- (void)setupCGContext:(struct CGContext *)arg1 withRenderingRequest:(id)arg2;
- (BOOL)hasGraphicsContext;
- (void)setUp;
- (double)zoomLevelForShadows;
- (void)endBitmapTransparencyLayer:(double)arg1;
- (void)endQuartzTransparencyLayer:(double)arg1;
- (void)endTransparencyLayer:(double)arg1;
- (double)beginQuartzTransparencyLayerInRect:(struct CGRect)arg1;
- (double)beginTransparencyLayerInRect:(struct CGRect)arg1 inheritClip:(BOOL)arg2;
- (double)beginBitmapTransparencyLayerInRect:(struct CGRect)arg1 inheritClip:(BOOL)arg2;
- (double)beginTransparencyLayer;
- (struct CGContext *)newTransparencyLayerContextForContext:(struct CGContext *)arg1 size:(struct CGSize)arg2;
- (int)setBlendMode:(int)arg1;
- (double)setAlpha:(double)arg1;
- (void)popGraphicsState;
- (void)pushGraphicsState;
- (void)concatTransform:(struct CGAffineTransform)arg1;
- (void)setContextRef:(struct CGContext *)arg1;
- (id)subContextForBackgroundBlurWithCGContext:(struct CGContext *)arg1 backgroundBlurLayer:(id)arg2 pointScale:(double)arg3 rect:(struct CGRect)arg4;
- (id)subContextWithCGContext:(struct CGContext *)arg1 contextIsVectorBacked:(BOOL)arg2 pointScale:(double)arg3 zoomLevel:(double)arg4 options:(unsigned long long)arg5;
- (id)subContextWithCGContext:(struct CGContext *)arg1 contextIsVectorBacked:(BOOL)arg2 renderingRequest:(id)arg3;
- (void)dealloc;
- (id)initWithName:(id)arg1 driver:(id)arg2 cgContext:(struct CGContext *)arg3 contextIsVectorBacked:(BOOL)arg4 renderingRequest:(id)arg5;
- (id)initWithName:(id)arg1 driver:(id)arg2 context:(struct CGContext *)arg3 renderingRequest:(id)arg4;
- (id)initWithName:(id)arg1 driver:(id)arg2 renderingRequest:(id)arg3;

@end

