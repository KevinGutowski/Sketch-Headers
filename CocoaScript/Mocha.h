//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun 13 2020 22:17:22).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MOBoxManager, NSArray, NSMutableArray, NSMutableDictionary;
@protocol MochaDelegate;

@interface Mocha : NSObject
{
    struct OpaqueJSContext *_ctx;
    struct OpaqueJSContextGroup *_ctxGroup;
    BOOL _ownsContext;
    NSMutableDictionary *_exportedObjects;
    MOBoxManager *_boxManager;
    NSMutableArray *_frameworkSearchPaths;
    id <MochaDelegate> _delegate;
}

+ (id)exceptionWithJSException:(struct OpaqueJSValue *)arg1 context:(struct OpaqueJSContext *)arg2;
+ (id)dictionaryForJSHash:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2;
+ (id)arrayForJSArray:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2;
+ (id)objectForJSValue:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2 unboxObjects:(BOOL)arg3;
+ (id)objectForJSValue:(struct OpaqueJSValue *)arg1 inContext:(struct OpaqueJSContext *)arg2;
+ (struct OpaqueJSValue *)JSValueForObject:(id)arg1 inContext:(struct OpaqueJSContext *)arg2;
+ (id)runtimeWithContext:(struct OpaqueJSContext *)arg1;
+ (id)sharedRuntime;
+ (void)initialize;
@property id <MochaDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)createBlock:(id)arg1 function:(id)arg2;
@property(readonly, copy) NSArray *globalSymbolNames;
- (void)cleanUp;
- (void)print:(id)arg1;
- (void)shutdown;
- (void)installBuiltins;
- (void)garbageCollect;
- (void)removeFrameworkSearchPathAtIndex:(unsigned long long)arg1;
- (void)insertFrameworkSearchPath:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addFrameworkSearchPath:(id)arg1;
@property(copy) NSArray *frameworkSearchPaths;
- (BOOL)loadBridgeSupportFilesAtPath:(id)arg1;
- (BOOL)loadFrameworkWithName:(id)arg1 inDirectory:(id)arg2;
- (BOOL)loadFrameworkWithName:(id)arg1;
- (void)throwJSException:(struct OpaqueJSValue *)arg1;
- (id)exceptionWithJSException:(struct OpaqueJSValue *)arg1;
- (BOOL)isSyntaxValidForString:(id)arg1;
- (struct OpaqueJSValue *)callJSFunction:(struct OpaqueJSValue *)arg1 withArgumentsInArray:(id)arg2;
- (struct OpaqueJSValue *)callJSFunctionWithName:(id)arg1 withArgumentsInArray:(id)arg2;
- (struct OpaqueJSValue *)JSFunctionWithName:(id)arg1;
- (id)callFunctionWithName:(id)arg1 withArgumentsInArray:(id)arg2;
- (id)callFunctionWithName:(id)arg1 withArguments:(id)arg2;
- (id)callFunctionWithName:(id)arg1;
- (struct OpaqueJSValue *)evalJSString:(id)arg1 scriptPath:(id)arg2;
- (struct OpaqueJSValue *)evalJSString:(id)arg1;
- (id)evalString:(id)arg1 atURL:(id)arg2;
- (id)evalString:(id)arg1;
- (BOOL)removeObjectWithName:(id)arg1;
- (struct OpaqueJSValue *)setJSValue:(struct OpaqueJSValue *)arg1 withName:(id)arg2 attributes:(unsigned int)arg3;
- (struct OpaqueJSValue *)setObject:(id)arg1 withName:(id)arg2 attributes:(unsigned int)arg3;
- (struct OpaqueJSValue *)setJSValue:(struct OpaqueJSValue *)arg1 withName:(id)arg2;
- (struct OpaqueJSValue *)setObject:(id)arg1 withName:(id)arg2;
- (id)objectWithName:(id)arg1;
- (id)unboxedObjectForJSObject:(struct OpaqueJSValue *)arg1;
- (struct OpaqueJSValue *)boxedJSObjectForObject:(id)arg1 shouldCreateBox:(BOOL)arg2;
- (id)objectForJSValue:(struct OpaqueJSValue *)arg1 unboxObjects:(BOOL)arg2;
- (id)objectForJSValue:(struct OpaqueJSValue *)arg1;
- (struct OpaqueJSValue *)JSValueForObject:(id)arg1 shouldCreateBox:(BOOL)arg2;
- (struct OpaqueJSValue *)JSValueForObject:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
@property(readonly) struct OpaqueJSContext *context;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)init;

@end

