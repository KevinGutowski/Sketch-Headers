//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun 13 2020 22:17:22).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SketchModel/NSCopying-Protocol.h>

@class NSSet;

@interface MSBezierSegment : NSObject <NSCopying>
{
    struct BCBezierSegment _segmentData;
    double _lineLength;
    _Atomic void *_lineLengthAtomicPointer;
    double _arcLength;
    _Atomic void *_arcLengthAtomicPointer;
    struct CGRect _bounds;
    _Atomic void *_boundsAtomicPointer;
    BOOL _looksLikeALine;
    _Atomic void *_looksLikeALineAtomicPointer;
    BOOL _isAPoint;
    _Atomic void *_isAPointAtomicPointer;
    double _maximumInset;
    _Atomic void *_maximumInsetAtomicPointer;
    NSSet *_inflectionOffsets;
    _Atomic void *_inflectionOffsetsAtomicPointer;
    NSSet *_xAxisRoots;
    _Atomic void *_xAxisRootsAtomicPointer;
    NSSet *_yAxisRoots;
    _Atomic void *_yAxisRootsAtomicPointer;
    MSBezierSegment *_derivative;
    _Atomic void *_derivativeAtomicPointer;
    CDStruct_aa84902a _fromRange;
}

+ (id)cubicSegmentWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
+ (id)quadraticSegmentWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint:(struct CGPoint)arg3;
+ (id)lineSegmentWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2;
+ (id)segmentWithFBBezierCurve:(id)arg1;
@property(nonatomic) CDStruct_aa84902a fromRange; // @synthesize fromRange=_fromRange;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
- (id)repr;
- (id)bezierPath;
- (BOOL)isEqualToBezierSegment:(id)arg1;
- (void)appendToCGPath:(struct CGPath *)arg1 orBezierPath:(id)arg2;
- (struct CGRect)bounds;
- (id)segmentForJoiningWithC1ContinuityToSegment:(id)arg1;
- (struct CGRect)controlPointBounds;
@property(readonly, nonatomic) NSSet *yAxisRoots;
@property(readonly, nonatomic) NSSet *xAxisRoots;
- (id)intersectionsWithVerticalLineAt:(double)arg1;
- (id)intersectionsWithHorizontalLineAt:(double)arg1;
- (id)setFromOffsets:(double *)arg1 count:(unsigned long long)arg2;
@property(readonly, nonatomic) NSSet *inflectionOffsets;
@property(readonly, nonatomic) double flatness;
- (id)normalizedSegment;
@property(readonly, nonatomic) double curviness;
- (id)derivative;
- (id)reversedSegment;
- (id)representationUsingType:(int)arg1;
- (id)quadraticApproximation;
- (id)segmentsBySplittingAtOffsets:(id)arg1;
- (id)segmentsByClippingToRect:(struct CGRect)arg1;
- (id)cubicRepresentation;
- (id)quadraticRepresentation;
- (id)lineRepresentation;
- (id)segmentWithInset:(double)arg1;
- (id)segmentsWithFlatness:(double)arg1;
- (id)segmentWithTransform:(struct CGAffineTransform)arg1;
- (id)segmentByMovingPointAtOffset:(double)arg1 toLocation:(struct CGPoint)arg2;
@property(readonly, nonatomic) struct CGAffineTransform transformForXAxisAlignment;
- (id)segmentInRange:(CDStruct_aa84902a)arg1;
- (id)segmentFromOffset:(double)arg1;
- (id)segmentToOffset:(double)arg1;
- (id)intersectionsWithSegment:(id)arg1;
- (id)offsetsOfIntersectionsWithTangent:(struct BCLine)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1 tolerance:(double)arg2;
- (double)offsetForNormalToPoint:(struct CGPoint)arg1;
- (double)curvatureAtOffset:(double)arg1;
- (double)curvatureAtEndPoint2;
- (double)curvatureAtEndPoint1;
- (double)curvatureFromPoint1:(struct CGPoint)arg1 point2:(struct CGPoint)arg2 point3:(struct CGPoint)arg3;
- (struct CGPoint)pointAtOffset:(double)arg1;
- (struct BCLine)tangentAtOffset:(double)arg1;
- (void)enumeratePoints:(unsigned long long)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)tangent:(struct BCLine *)arg1 andPoint:(struct CGPoint *)arg2 atOffset:(double)arg3;
- (void)quadraticDeCasteljauAt:(double)arg1 points:(struct CGPoint *)arg2;
- (void)cubicDeCasteljauAt:(double)arg1 points:(struct CGPoint *)arg2;
@property(readonly, nonatomic) struct BCLineSegment lineSegment;
@property(readonly, nonatomic) BOOL isAPoint;
@property(readonly, nonatomic) BOOL looksLikeALine;
@property(readonly, nonatomic) double arcLength;
- (double)arcLengthWithSegments:(unsigned long long)arg1;
@property(readonly, nonatomic) double lineLength;
- (id)segmentMirroredAtOffset:(double)arg1;
- (id)segmentWithEndPoint2:(struct CGPoint)arg1;
- (id)segmentWithEndPoint1:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) struct CGPoint controlPoint2;
@property(readonly, nonatomic) struct CGPoint controlPoint1;
@property(readonly, nonatomic) struct CGPoint endPoint2;
@property(readonly, nonatomic) struct CGPoint endPoint1;
@property(readonly, nonatomic) int segmentType;
@property(readonly, nonatomic) struct BCBezierSegment segmentData;
- (id)initWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
- (id)initWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2 controlPoint:(struct CGPoint)arg3;
- (id)initWithEndPoint1:(struct CGPoint)arg1 endPoint2:(struct CGPoint)arg2;
- (id)initWithSegmentData:(struct BCBezierSegment)arg1;
- (id)segmentBySmoothingEndPoints:(double)arg1 decay:(double)arg2;
- (id)FBBezierCurve;

@end

